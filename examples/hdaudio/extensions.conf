[globals]
INTERNAL_DIAL_OPT=,20
MAXSBC=2
CURRENTSBC=0

DOM1=verizon.internals.globalipcom.com ; This is the Verizon customer Domain.  This allows us to respond regardless of which EBI we use. 

;#include eutilities.conf
#include testkit/testkit.conf

[stdexten]
;
; Standard extension subroutine:
;   ${EXTEN} - Extension
;   ${ARG1} - Device(s) to ring
;   ${ARG2} - Optional context in Voicemail
;
; Note that the current version will drop through to the next priority in the
; case of their pressing '#'.  This gives more flexibility in what do to next:
; you can prompt for a new extension, or drop the call, or send them to a
; general delivery mailbox, or...
;
; The use of the LOCAL() function is purely for convenience.  Any variable
; initially declared as LOCAL() will disappear when the innermost Gosub context
; in which it was declared returns.  Note also that you can declare a LOCAL()
; variable on top of an existing variable, and its value will revert to its
; previous value (before being declared as LOCAL()) upon Return.
;
exten => _X.,50000(stdexten),NoOp(Start stdexten)
exten => _X.,n,Set(LOCAL(ext)=${EXTEN})
exten => _X.,n,Set(LOCAL(dev)=${ARG1})
exten => _X.,n,Set(LOCAL(cntx)=${ARG2})
;exten => _X.,n,Set(LOCAL(mbx)=${ext}${IF($[!${ISNULL(${cntx})}]?@${cntx})})
exten => _X.,n,Dial(${dev},20)                          ; Ring the interface, 20 seconds maximum
exten => _X.,n,Goto(stdexten-${DIALSTATUS},1)           ; Jump based on status (NOANSWER,BUSY,CHANUNAVAIL,CONGESTION,ANSWER)

exten => _+X.,50000(stdexten),NoOp(Start stdexten)
exten => _+X.,n,Set(LOCAL(ext)=${EXTEN})
exten => _+X.,n,Set(LOCAL(dev)=${ARG1})
exten => _+X.,n,Set(LOCAL(cntx)=${ARG2})
;exten => _X.,n,Set(LOCAL(mbx)=${ext}${IF($[!${ISNULL(${cntx})}]?@${cntx})})
exten => _+X.,n,Dial(${dev},20)                         ; Ring the interface, 20 seconds maximum
exten => _+X.,n,Goto(stdexten-${DIALSTATUS},1)          ; Jump based on status (NOANSWER,BUSY,CHANUNAVAIL,CONGESTION,ANSWER)


exten => stdexten-NOANSWER,1,VoiceMail(${mbx},u)        ; If unavailable, send to voicemail w/ unavail announce
exten => stdexten-NOANSWER,n,Return()                   ; If they press #, return to start

exten => stdexten-BUSY,1,VoiceMail(${mbx},b)            ; If busy, send to voicemail w/ busy announce
exten => stdexten-BUSY,n,Return()                       ; If they press #, return to start

exten => _stde[x]te[n]-.,1,Goto(stdexten-NOANSWER,1)    ; Treat anything else as no answer

exten => a,1,VoiceMailMain(${mbx})                      ; If they press *, send the user into VoicemailMain
exten => a,n,Return()

[Handlers]
exten => Dialer,1,NoOp(Handler:Dialer ${ARG1} ${ARG2})
; same => n,GotoIf($[${LEN(${BLINDTRANSFER})} = 0]?here)
; same => n,NoOp(BLINDTRANSFER=${BLINDTRANSFER})
; same => n,Set(STATION=${CUT(BLINDTRANSFER,,-1):4})
; same => n,NoOp(STATION=${STATION})
;same => n,SIPAddHeader(Diversion:  <sip:${STATION}@10.0.0.98>\;privacy=off\;reason=unconditional)
 same => n(here),Dial(PJSIP/${ARG1}@SBC${CURRENTSBC},,wW)
 same => n,Return()

exten => RRNDialer,1,NoOp(Handler:RRNDialer ${ARG1} ${ARG2})
 same => n,NoOp(Dial SBC${CURRENTSBC} TEST of Round Robin)
 same => n,Set(GLOBAL(CURRENTSBC)=${IF($[${CURRENTSBC} >= ${MAXSBC}]?1:$[${CURRENTSBC}+1])})
 same => n(here),Dial(PJSIP/${ARG1}@SBC${CURRENTSBC},,wW)
 same => n,Return()

exten => LBDialer,1,NoOp(Handler:LBDialer ${ARG1} ${ARG2})
 same => n,Set(SBCS=3) ; Number of SBCS, all in Endpoints names SBCx
 same => n,Set(INDEX=1)
 same => n,Set(RANDOM=${RAND(0,$[${SBCS} - 1])})
 same => n(CALL),NoOP(Attempt Call)
 same => n,Set(TARGET=SBC$[(${INDEX} + ${RANDOM})%(${SBCS}) + 1])
 same => n,Dial(PJSIP/${ARG1}@${TARGET},${ARG2},${ARG3},${ARG4})
 same => n,GotoIf($[${INDEX} >= ${SBCS}]?END:)
 same => n,Set(INDEX=$[${INDEX}+1])
 same => n,GotoIf($["${DIALSTATUS}" = "CHANUNAVAIL"]?CALL:)
 same => n,GotoIf($["${DIALSTATUS}" = "CONGESTION"]?CALL:)
 same => n(END),NoOP(End of Macro:LBDial)
 same => n,Return()
; SBCS= # of SBCs
; index = RND between 1 - SBCs
; stop  = index + SBCs - 1
; Call via Index
; if success goto end
; if index = stop goto end
; index = index + 1
; Goto call
;
exten = SIPExten,1,Verbose(1, "DialUser ${CALLERID(num)} dialed ${ARG1} ${ARG2} ${ARG3}.")
 same = n,Set(LOCAL(ext)=${ARG1})
 same = n,Set(LOCAL(dev)=${ARG2})
 same = n,Set(LOCAL(cntx)=${ARG3})
 same = n,Dial(${dev}${INTERNAL_DIAL_OPT})
 same = n,Goto(dialed-${DIALSTATUS},1)

exten = dialed-NOANSWER,1,NoOp(STATUS: NOANSWER)
 same = n,Return()

exten = dialed-BUSY,1,NoOp(STATUS: BUSY)
 same = n,Return()

exten = dialed-CHANUNAVAIL,1,NoOp(STATUS: CHANUNAVAIL)
 same = n,Return()

exten = _dialed-.,1,NoOp(Dialed other ${DIALSTATUS})
 same = n,Goto(dialed-NOANSWER,1)

; Add Header to the Outbound Call
exten => addHeaders,1,NoOp(Set Both Diversion[${ARG1}] Paid[${ARG2}] using Domain [${ARG3}] and Codecs [${ARG4}])
 same => n,NoOP(addHeaders ${ARG1} ${ARG2} ${ARG3} ${ARG4})

 ; Future set the Domain if provided. Need to tes tthis line first.
 ;same => n,Set(MyDOM=IF($["${ARG3}" = ""]?${DOM1}:${ARG3}))

 same => n,GotoIf($["${ARG1}" = ""]?skipDiversion)}
 same => n,set(PJSIP_HEADER(add,Diversion)=<sip:${ARG1}@${DOM1}>);\;privacy=off\;reason=unconditional)
 same => n(skipDiversion),NoOp()

 same => n,GotoIf($["${ARG2}" = ""]?skipPAID)}
 same => n,Set(PJSIP_HEADER(add,P-Asserted-Identity)=<sip:${ARG2}@${DOM1}>)
 same => n(skipPAID),NoOp()

 same => n,NoOp(ARG4 is ${ARG4})
 same => n,GotoIf($["${ARG4}" = ""]?skipCODECS)}
 same => n,Set(CODECS=${REPLACE(ARG4,|,\054)})
 same => n,Set(PJSIP_MEDIA_OFFER(audio)=!all,${CODECS})
 same => n(skipCODECS),NoOp()

 same => n,NoOp(CALLID = ${CHANNEL(pjsip,call-id)})
 same => n,Set(CDR(callid)=${CHANNEL(pjsip,call-id)})

 same => n,return()

exten => hangupStats,1,NoOp(Hangup Stats)
 same => n,Set(RTCP_data=${CHANNEL(rtcp,all,audio)})
 same => n,NoOp(RTCP Values : ${RTCP_data})

;[TestLaunch]
;exten => +19723672928,1,GoSub(TestKit,TestPortal,1(TestCases))
; same => n,hangup()
;Inbound to the test Launchpad

;Portal Telephone Numebr
;exten => +19723672820,1,NoOp(Inbound Test selection)
; same => n,Ringing()
; same => n,Answer
; same => n,Wait(1)

;Validate Caller
; same => n,NoOp(CALLERID(num) = ${CALLERID(num)})
; same => n,GotoIf($["${CALLERID(num)}" = "+16123066440"]?validCaller)}; David Cell
; same => n,GotoIf($["${CALLERID(num)}" = "+17632584535"]?validCaller)}; David Cell
; same => n,GotoIf($["${CALLERID(num)}" = "+17038526073"]?validCaller)}; Kristie Desk
; same => n,GotoIf($["${CALLERID(num)}" = "+16012590380"]?validCaller)}; Kristie Cell
; same => n,GotoIf($["${CALLERID(num)}" = "+17038526073"]?validCaller)}; Chris Desk
; same => n,GotoIf($["${CALLERID(num)}" = "+19192088695"]?validCaller)}; Chris Cell
; same => n,GotoIf($["${CALLERID(num)}" = "+17038879441"]?validCaller)}; Sanjay Cell
; same => n,GotoIf($["${CALLERID(num)}" = "+17038879441"]?validCaller)}; Sanjay Cell
; same => n,GotoIf($["${CALLERID(num)}" = "+33170737822"]?validCaller)}; Francoise Desk
; same => n,GotoIf($["${CALLERID(num)}" = "+33621765116"]?validCaller)}; Francoise Mobile
; same => n,GotoIf($["${CALLERID(num)}" = "+33685928708"]?validCaller)}; Francoise Mobile 2
; same => n,GotoIf($["2" = "1"]?validCaller)}
; same => n,Playback(beeperr)
; same => n,Playback(beeperr)
; same => n,Read(MyDigits,,0,n,,60)
; same => n,NoOp(Reciecved Mydigits = ${MyDIgits})
; same => n,GotoIf($["${MyDigits}" = "9459"]?validCaller)}
; same => n,Playback(beeperr)
; same => n,Playback(beeperr)
; same => n,hangup()
;
;;Select and Run Test
; same => n(validCaller),NoOp(Valid Caller)
; same => n,Playback(beep)
; same => n,Read(MyDigits,,0,n,,60)
; same => n,SayAlpha(${MyDigits})
; same => n,GoSub(TestCases,${MyDigits},1)
; same => n,hangup()

;; Macro to make outbound call with a variety of SIP headers
;exten =>TestOut,1,NoOp(TestOut ([${ARG1}],[${ARG2}],[${ARG3}],[${ARG4}],[${ARG5}],[${ARG6}]))
; same => n,Set(ARRAY(Title,To,From,Diversion,PAID,EBI)=${ARG1},${ARG2},${ARG3},${ARG4},${ARG5},${ARG6})
; same => n,NoOp(TestOut ([${Title}],[${To}],[${From}],[${Diversion}],[${PAID}],[${EBI}]))
;
; ; Set Title
; same => n,Set(Title=${IF($[ "${Title}" = ""]?#:${Title})})
; same => n,Set(Title=${IF($[ "${Title}" = "#"]?ECN Test(${EXTEN}):${Title})})
; same => n,Set(Caller=${CALLERID(name)})
; same => n,set(CALLERID(name)=${Title}-${Caller})
; same => n,set(CALLERID(num)=${From})
;
; ; Set correct EBI source, default to LLD
; same => n,Set(EBI=${IF($[ "${EBI}" = ""]?LLD:${EBI})})
; same => n,Set(EBI=${IF($[ ${EBI} = LLD]?USLocLvl-USLLET4EBI1:${EBI})})
; same => n,Set(EBI=${IF($[ ${EBI} = LDO]?USLocLvl-AsteriskEBI1:${EBI})})
;
; ; Make Call
; same => n,NoOp(TestOut ([${Title}],[${To}],[${From}],[${Diversion}],[${PAID}],[${EBI}]))
; same => n,Dial(PJSIP/${To}@${EBI},,b(Handlers^addHeaders^1(${Diversion},${PAID})))

;;; Record Audio
exten => RecAudio,1,NoOp(Record Audio)
 same => n,Set(RecTime=${STRFTIME(,,%Y%m%dT%H%M%S%3q)})
 same => n,Set(RecType=g722)
 same => n,Set(RecFile=${RecTime})
 same => n,Record(recordings/${RecFile}.${RecType})
 ;same => n,System(/usr/sbin/asterisk -rx "file convert recordings/${RecFile}.${RecType} recordings/${RecFile}.g729")
 ;same => n,System(/usr/sbin/asterisk -rx "file convert recordings/${RecFile}.${RecType} recordings/${RecFile}.ulaw")
 same => n,System(/usr/sbin/asterisk -rx "file convert recordings/${RecFile}.${RecType} recordings/A.g729")
 same => n,System(/usr/sbin/asterisk -rx "file convert recordings/${RecFile}.${RecType} recordings/B.ulaw")
 same => n,Wait(1)
 same => n,Playback(recordings/${RecFile})
 same => n,Playback(recordings/B)
 same => n,Playback(recordings/A)
 same => n,Playback(recordings/${RecFile})
 same => n,Return(${RecFile})

[catch-all]
exten => _[+0-9].,1,Answer()
exten => _[+0-9].,n,Progress()
exten => _[+0-9].,n,Wait(1)
exten => _[+0-9].,n,Playback(custom/hal-sorry-dave)
;exten => _[+0-9].,n,Playback(hello-world)
exten => _[+0-9].,n,Wait(1)
exten => _[+0-9].,n,Echo()
exten => _[+0-9].,n,Wait(1)
exten => _[+0-9].,n,Hangup()

[from-verizon]

;HD-307 g729,ulaw,alaw w/ Reinvite of same (Was getting 488 without delay)
exten => +12489360273,1,NoOp(488 Issue) 
 same => n,Ringing()
 same => n,Wait(3)
 same => n,Answer()
 ;same => n,Wait(5) Adding htis delay allows VZW-VZB Ribbons to chatch up.  Not realistic, but it does prove Ribbon's Theory. 
 same => n,Set(PJSIP_MEDIA_OFFER(audio)=!all,g729,ulaw,alaw)
 same => n,Set(PJSIP_SEND_SESSION_REFRESH()=invite)
 same => n,Background(moh/manolo_camp-morning_coffee)
 same => n,Wait(1)
 same => n,Hangup()

;HD-312 g729,ulaw,alaw w/ Reinvite of same (Was getting 488 without delay)
exten => +15126520127,1,NoOp(488 Issue) 
 same => n,Ringing()
 same => n,Wait(3)
 same => n,Answer()
 ;same => n,Wait(5) Adding htis delay allows VZW-VZB Ribbons to chatch up.  Not realistic, but it does prove Ribbon's Theory. 
 same => n,Set(PJSIP_MEDIA_OFFER(audio)=!all,g729,ulaw,alaw)
 same => n,Set(PJSIP_SEND_SESSION_REFRESH()=invite)
 same => n,Background(moh/manolo_camp-morning_coffee)
 same => n,Wait(1)
 same => n,Hangup()

; HD-518 g729,ulaw,alaw w/ Reinvite of same (Was getting 488 without delay)
exten => +19844653958,1,NoOp(488 Issue) 
 same => n,Ringing()
 same => n,Wait(3)
 same => n,Answer()
 ;same => n,Wait(5) Adding htis delay allows VZW-VZB Ribbons to chatch up.  Not realistic, but it does prove Ribbon's Theory. 
 same => n,Set(PJSIP_MEDIA_OFFER(audio)=!all,g729,ulaw,alaw)
 same => n,Set(PJSIP_SEND_SESSION_REFRESH()=invite)
 same => n,Background(moh/manolo_camp-morning_coffee)
 same => n,Wait(1)
 same => n,Hangup()


exten => +19723670202,1,NoOp(IVR Example) 
 same => n,Ringing()
 same => n,Wait(2)
 same => n,Answer()
 same => n,Wait(2)
 ;same => n,Playback(basic-pbx-ivr-main)
 same => n,Read(MyDigits,basic-pbx-ivr-main,1,n,,5)

 same => n,NoOp(reinvite g722)
 same => n,Set(PJSIP_MEDIA_OFFER(audio)=!all,g722)
 same => n,Set(PJSIP_SEND_SESSION_REFRESH()=invite)
 same => n,Wait(2)
 same => n,Playback(eletelephony)

 same => n,NoOp(reinvite ulaw)
 same => n,Set(PJSIP_MEDIA_OFFER(audio)=!all,ulaw)
 same => n,Set(PJSIP_SEND_SESSION_REFRESH()=invite)
 same => n,Wait(2)
 same => n,Playback(get-in-line-sales-guy)

 same => n,NoOp(reinvite g722)
 same => n,Set(PJSIP_MEDIA_OFFER(audio)=!all,g722)
 same => n,Set(PJSIP_SEND_SESSION_REFRESH()=invite)
 same => n,Wait(2)
 same => n,Playback(zombies)
 same => n,hangup()
;exten => +19723672820,1,GoSub(TestKit,TestPortal,1(TestCases))
;include => TestLaunch
;include => TestCases

;Stasis Test
exten => +14696973640,1,NoOp(From Audio codes)
 same => n,Ringing()
 same => n,Answer()
 same => n,Wait(1)
 same => n,Playback(hello-world)
 same => n,Playback(custom/dave/record-at-the-tone-pound-to-stop)
 same => n,Record(/tmp/test-${UNIQUEID}.wav16,6,30)
 same => n,Playback(custom/dave/i-recorded)
 same => n,Playback(/tmp/test-${UNIQUEID})
 same => n,Wait(1),
 same => n,Wait(1)
 same => n,Hangup()

;Select and Run Test
;exten => +19723672820,1,NoOp(HD Audio Portal ${EXTEN})
 exten => +19723672820,1,GoSub(testkit,testportal,1)
 ;- Added answer when skipped testportal
 ; Answer Call
 ;same => n,Ringing()
 ;same => n,Answer()
 ;same => n,Wait(1)

 ; added Validate Calleer when skipped testportal
 ; Validate Caller
 ;same => n,GoSub(testkit,validate-caller,1(${CALLERID(num):1},access-code,9459,hdaudio))
 ;same => n,GotoIf($["${GOSUB_RETVAL}" == "Yes"]?validCaller)} 
 ;same => n,Playback(beeperr)
 ;same => n,Hangup()
 ;same => n(validCaller),NoOp(validate-caller: Validated ${GOSUB_RETVAL})
 
 ;Get Test Code and Called Party
 same => n,Playback(beep)
 same => n,Read(MyDigits,,0,n,,60)
 same => n,SayAlpha(${MyDigits})
 ; Check for valid format and length, adjust CN code to two digits
 same => n,GotoIf($[${LEN(${MyDigits})} < 3]?ERROR)
 same => n,GotoIf($[${LEN(${MyDigits})} = 3]?ENTER)
 same => n,Set(CODE=${MyDigits:3})
 same => n,Set(CODE=${IF($[${LEN(${CODE})} = 1]?"0"${CODE}:${CODE})})
 ;same => n,GotoIf($[${LEN(${CODE})} = 2]?LOOKUP)
 ; CN was already Entered
 ;same => n,Set(CN=${CODE})
 ;same => n,Goto(RUNTEST)
 ; Look Up CN Code, 
 same => n(LOOKUP),NoOp(Lookup CN from CODE x${CODE}x)
 same => n,Set(CODE=${IF($["${CODE}" == "01"]?"+16123609803":${CODE})})
 same => n,Set(CODE=${IF($["${CODE}" == "02"]?"+19198124516":${CODE})})
 same => n,Set(CODE=${IF($["${CODE}" == "03"]?"+14692618996":${CODE})})
 same => n,Set(CODE=${IF($["${CODE}" == "04"]?"+15512072224":${CODE})})
 same => n,Set(CODE=${IF($["${CODE}" == "05"]?"+17322369139":${CODE})})
 same => n,Set(CODE=${IF($["${CODE}" == "06"]?"+19082688851":${CODE})})
 same => n,Set(CODE=${IF($["${CODE}" == "07"]?"+19082294336":${CODE})})
 same => n,Set(CODE=${IF($["${CODE}" == "08"]?"+12562023285":${CODE})})
 same => n,Set(CODE=${IF($["${CODE}" == "09"]?"+16096175945":${CODE})})
 same => n,Set(CODE=${IF($["${CODE}" == "10"]?"+16123066440":${CODE})})
 same => n,Set(CODE=${IF($["${CODE}" == "11"]?"+19193845168":${CODE})})
 same => n,Set(CODE=${IF($["${CODE}" == "12"]?"+19729893243":${CODE})})
 same => n,Set(CODE=${IF($["${CODE}" == "13"]?"+12015518284":${CODE})})
 same => n,Set(CODE=${IF($["${CODE}" == "14"]?"+19084580435":${CODE})})
 same => n,Set(CODE=${IF($["${CODE}" == "15"]?"+15125419999":${CODE})})
 same => n,Set(CODE=${IF($["${CODE}" == "16"]?"+17372330999":${CODE})})
 same => n,Set(CODE=${IF($["${CODE}" == "17"]?"+15126951346":${CODE})})
 same => n,Set(CODE=${IF($["${CODE}" == "18"]?"+12487032260":${CODE})})
 same => n,Set(CODE=${IF($["${CODE}" == "20"]?"+15125711566":${CODE})})
 same => n,Set(CODE=${IF($["${CODE}" == "21"]?"+15126843606":${CODE})}) ; Paul Gabler
 same => n,Set(CODE=${IF($["${CODE}" == "22"]?"+15128201450":${CODE})}) ; Derek Duprez
 same => n,Set(CODE=${IF($["${CODE}" == "23"]?"+19723741798":${CODE})}) ; CHuck Hart WebexCalling 
 same => n,Set(CODE=${IF($["${CODE}" == "24"]?"+13134100000":${CODE})}) ; Alan Hasan Detroit 

 same => n,Set(CN=${CODE})
 same => n,GotoIf($[${LEN(${CODE})} > 2]?RUNTEST)

 ; Get Number to Call since valid CN code was not provided
 same => n(ENTER),Playback(vm-enter-num-to-call)
 same => n,Read(CN,,0,n,,60)
 ; Run Test
 same => n(RUNTEST),NoOp( Run test with Test ${MyDigits:0:3} calling ${CN}) 
 same => n,GoSub(TestCases,${MyDigits:0:3},1,(${CN}))
 same => n,Goto(END)
 ;Found Error 
 same => n(ERROR),Playback(custom/hal-sorry-dave)
 same => n(END),hangup()

exten => 22,1,NoOp(Record and play audio)
 same => n,Answer(500)
 same => n,GoSub(Handlers,RecAudio,1)
 same => n,Hangup()

exten => +14696973520,1,GoSub(Handlers,SIPExten,1,(${EXTEN},PJSIP/${EXTEN}))
exten => +19723670185,1,GoSub(Handlers,SIPExten,1,(${EXTEN},PJSIP/${EXTEN}))
exten => +19723670186,1,GoSub(Handlers,SIPExten,1,(${EXTEN},PJSIP/${EXTEN}))
exten => +19723670187,1,GoSub(Handlers,SIPExten,1,(${EXTEN},PJSIP/${EXTEN}))
exten => +19723670188,1,GoSub(Handlers,SIPExten,1,(${EXTEN},PJSIP/${EXTEN}))
include => sip-phones

exten => _[+0-9].,1,NoOp(Inbound Test ${EXTEN})
 same => n,GotoIf($["${EXTEN}" == "+19723670189"]?EarlyMedia)}
 same => n,GotoIf($["${EXTEN}" == "+19723670195"]?EarlyMedia)}
 same => n,GotoIf($["${EXTEN}" == "+19723670203"]?EarlyMedia)}
 same => n,GotoIf($["${EXTEN}" == "+15126520032"]?EarlyMedia)}  
 same => n,GotoIf($["${EXTEN}" == "+15126520114"]?Ringing180)}  
 same => n,GotoIf($["${EXTEN}" == "+19844653560"]?EarlyMedia)}  
 same => n,GotoIf($["${EXTEN}" == "+19844653729"]?EarlyMedia)}  
 same => n,GotoIf($["${EXTEN}" == "+19844653952"]?Ringing180)}  
 same => n,GotoIf($["${EXTEN}" == "+19844653954"]?EarlyMedia)}  
 same => n,GotoIf($["${EXTEN}" == "+19844653955"]?EarlyMedia)}  
 same => n,GotoIf($["${EXTEN}" == "+19844653958"]?Ringing180)}  
 same => n,GotoIf($["${EXTEN}" == "+19844653963"]?Ringing180)}  
 same => n,GotoIf($["${EXTEN}" == "+19844653964"]?Ringing180)}  
 same => n,Goto(AnswerCall)

 same => n(EarlyMedia),Progress()
 same => n,Wait(2)
 same => n,Playback(custom/dave/early-media,noanswer)
 ;same => n,Playback(custom/early-media,noanswer)
 same => n,Goto(AnswerCall)

 same => n(Ringing180),NoOp(Ringing 180)
 same => n,Ringing()
 same => n,Wait(3)

 same => n(AnswerCall),NoOP(AnswerCall)
 same => n,Answer()
 same => n,Wait(1)

; ${CHANNEL}
 same => n,Set(CMD=asterisk -rx "core show channel ${CHANNEL}")
 same => n,Set(PATTERN=perl -ne 'print $1 if /NativeFormats: \((.*)\)/')
 same => n,Set(OUT=${SHELL(${CMD} | ${PATTERN})})
 ;same => n,SayAlpha(${OUT})
 same => n,Playback(custom/dave/${OUT})

;Play Media Loop Long Media  * and # exit
 same => n(Loop),NoOp(Play Music until digit is pressed)
 same => n,Set(ORIGEXTEN=${EXTEN})
 same => n,Set(RND=${RAND(1,5)})
 same => n,GotoIf($["${RND}" == "1"]?Music1)} 
 same => n,GotoIf($["${RND}" == "2"]?Music2)} 
 same => n,GotoIf($["${RND}" == "3"]?Music3)} 
 same => n,GotoIf($["${RND}" == "4"]?Music4)} 
 same => n,GotoIf($["${RND}" == "5"]?Music5)} 
 same => n(Music1),Background(moh/reno_project-system)
 same => n,Goto(Loop)
 same => n(Music2),Background(moh/macroform-cold_day)
 same => n,Goto(Loop)
 same => n(Music3),Background(moh/macroform-the_simplicity)
 same => n,Goto(Loop)
 same => n(Music4),Background(moh/manolo_camp-morning_coffee)
 same => n,Goto(Loop)
 same => n(Music5),Background(moh/macroform-robot_dity)
 same => n,Goto(Loop)

; if * run record test
exten => #,1,NoOp(Record Message and Play it)
 same => n,Playback(custom/dave/record-at-the-tone-pound-to-stop)
 same => n,Record(/tmp/test-${UNIQUEID}.wav16,6,30)
 same => n,Playback(custom/dave/i-recorded)

 same => n,Playback(/tmp/test-${UNIQUEID})
 same => n,Wait(1),
 same => n,Goto(${ORIGEXTEN},Loop)

; if * run Cycle test
exten => *,1,NoOp(Codec Cycle Test)

 ; In some cases we want to override the default order of the cycle test. with g722,ulaw...
 same => n,GotoIf($["${ORIGEXTEN}" == "+15126520122"]?OVERRIDE) 
 same => n,GotoIf($["${ORIGEXTEN}" == "+12489360202"]?OVERRIDE) 
 same => n,GotoIf($["${ORIGEXTEN}" == "+19844653959"]?OVERRIDE) 
 same => n,Gosub(testkit,codeccycle-test,1)
 same = n,Goto(DONE)
  
 same => n(OVERRIDE),Gosub(testkit,codeccycle-test,1(g722|ulaw))
 same => n(DONE),NoOp()

include => catch-all

[from-other]
include => sip-phones
include => catch-all

[outbound]
exten => _XXXX,1,NoOp(Dialed four digit extention)
 same => n,Dial(PJSIP/${EXTEN}@OTHER)
 same => n,Congestion

;; Send anything we have to Verizon  all patterns
exten => _[*+0-9].,1,NoOP(Outbound all patterns ${EXTEN})
 same => n,Set(CHANNEL(hangup_handler_push)=Handlers,hangupStats,1)
 same => n,GoSub(Handlers,RRNDialer,1,(${EXTEN}))
 same => n,Congestion

;; E.164 Digit Dialing
;exten => _+1NXXNXXXXXX,1,NoOp(Outbound E.164 Pattern)
; same => n,Set(CALLERID(all)= "ATG ALCID Test" <6123066440>)
; same => n,Dial(PJSIP/${EXTEN}@CAEntLvl-CanadaEBI1,,b(handler^addheader^1))
; same => n,Congestion

;; Dialing 911
;exten => 911,1,NoOp(Outbound 911)
;; same => n,Dial(PJSIP/${EXTEN}@USCAEL-EBI2)
; same => n,Congestion
;
;; N11 Digit Dialing NOT 911
;exten => _[2345678]11,1,NoOp(Outbound N11 Pattern WITHOUT 911)
; same => n,Dial(PJSIP/${EXTEN}@USCAEL-EBI2)
; same => n,Congestion
;
;exten => _X.,1,NoOP(Outbound all non-plus patterns)
; same => n,Dial(PJSIP/${EXTEN}@USCAEL-EBI2)
; same => n,Congestion
;
;exten => _+X.,1,NoOP(Outbound all plus patterns)
; same => n,Dial(PJSIP/${EXTEN}@USCAEL-EBI2)
; same => n,Congestion
;
;exten => 0,1,NoOP(Outbound Operator 0)
; same => n,Dial(PJSIP/${EXTEN}@USCAEL-EBI2)
; same => n,Congestion
;
;exten => 00,1,NoOP(Outbound Operator 00)
; same => n,Dial(PJSIP/${EXTEN}@USCAEL-EBI2)
; same => n,Congestion
;
[from-phone]
exten => 22,1,NoOp(Record and play audio)
 same => n,Answer(500)
 same => n,GoSub(Handlers,RecAudio,1)
 same => n,Hangup()
exten => h,1,Set(RTCP_data=${CHANNEL(rtpqos,audio,all)})
exten => h,n,NoOp(RTCP Values : ${RTCP_data})
include => outbound
include => sip-phones
include => catch-all

[sip-phones]
include => stdexten

exten => +14696973520,1,GoSub(Handlers,SIPExten,1,(${EXTEN},PJSIP/${EXTEN}))
exten => +19723670185,1,GoSub(Handlers,SIPExten,1,(${EXTEN},PJSIP/${EXTEN}))
exten => +19723670186,1,GoSub(Handlers,SIPExten,1,(${EXTEN},PJSIP/${EXTEN}))
exten => +19723670187,1,GoSub(Handlers,SIPExten,1,(${EXTEN},PJSIP/${EXTEN}))
exten => +19723670188,1,GoSub(Handlers,SIPExten,1,(${EXTEN},PJSIP/${EXTEN}))


[TestCases]
; List of predefined tests
; TestOut (Title, To, From, Diversion, Paid, EBI,Codec List A|B|C)

exten => 201,1,GoSub(testkit,outbound-test,1,(HA201-CN,${ARG1},+19723670189,,,SBC1,ulaw))
exten => 202,1,GoSub(testkit,outbound-test,1,(HA202-CN,${ARG1},+19723670190,,,SBC1,alaw))
exten => 203,1,GoSub(testkit,outbound-test,1,(HA203-CN,${ARG1},+19723670191,,,SBC1,ulaw|alaw))
exten => 204,1,GoSub(testkit,outbound-test,1,(HA204-CN,${ARG1},+19723670192,,,SBC1,alaw|ulaw))
exten => 205,1,GoSub(testkit,outbound-test,1,(HA205-CN,${ARG1},+19723670193,,,SBC1,g729))
exten => 206,1,GoSub(testkit,outbound-test,1,(HA206-CN,${ARG1},+19723670194,,,SBC1,g729|ulaw))
exten => 207,1,GoSub(testkit,outbound-test,1,(HA207-CN,${ARG1},+19723670195,,,SBC1,g722))
exten => 208,1,GoSub(testkit,outbound-test,1,(HA208-CN,${ARG1},+19723670196,,,SBC1,g722|ulaw))
exten => 209,1,GoSub(testkit,outbound-test,1,(HA209-CN,${ARG1},+19723670197,,,SBC1,g722|g729))
exten => 210,1,GoSub(testkit,outbound-test,1,(HA210-CN,${ARG1},+19723670198,,,SBC1,g722|g729|ulaw))
exten => 211,1,GoSub(testkit,outbound-test,1,(HA211-CN,${ARG1},+19723670199,,,SBC1,g722|amrwb|ulaw))
exten => 212,1,GoSub(testkit,outbound-test,1,(HA212-CN,${ARG1},+19723670200,,,SBC1,g722|amrwb|g729))
exten => 213,1,GoSub(testkit,outbound-test,1,(HA213-CN,${ARG1},+19723670201,,,SBC1,g722|amrwb|amr|g729|ulaw|alaw))
exten => 214,1,GoSub(testkit,outbound-test,1,(HA214-CN,${ARG1},+19723670202,,,SBC1,amr))
exten => 215,1,GoSub(testkit,outbound-test,1,(HA215-CN,${ARG1},+19723670203,,,SBC1,amrwb))
exten => 216,1,GoSub(testkit,outbound-test,1,(HA216-CN,${ARG1},+19723670204,,,SBC1,amrwb|ulaw))
exten => 217,1,GoSub(testkit,outbound-test,1,(HA217-CN,${ARG1},+19723670205,,,SBC1,amrwb|g722|ulaw))
exten => 218,1,GoSub(testkit,outbound-test,1,(HA218-CN,${ARG1},+19723670206,,,SBC1,amrwb|g722|g729))
exten => 219,1,GoSub(testkit,outbound-test,1,(HA219-CN,${ARG1},+19723670207,,,SBC1,amrwb|g722|g729|ulaw))
exten => 220,1,GoSub(testkit,outbound-test,1,(HA220-CN,${ARG1},+19723670208,,,SBC1,amrwb|g729))
exten => 221,1,GoSub(testkit,outbound-test,1,(HA221-CN,${ARG1},+19723670209,,,SBC1,amrwb|g729|ulaw))

exten => 401,1,GoSub(testkit,outbound-test,1,(HA401,${ARG1},+12489360182,,,SBC1,ulaw))
exten => 402,1,GoSub(testkit,outbound-test,1,(HA402,${ARG1},+12489360203,,,SBC1,alaw))
exten => 403,1,GoSub(testkit,outbound-test,1,(HA403,${ARG1},+12489360204,,,SBC1,ulaw|alaw))
exten => 404,1,GoSub(testkit,outbound-test,1,(HA404,${ARG1},+12489360205,,,SBC1,alaw|ulaw))
exten => 405,1,GoSub(testkit,outbound-test,1,(HA405,${ARG1},+12489360221,,,SBC1,g729))
exten => 406,1,GoSub(testkit,outbound-test,1,(HA406,${ARG1},+12489360182,,,SBC1,g729|ulaw))
exten => 407,1,GoSub(testkit,outbound-test,1,(HA407,${ARG1},+12489360203,,,SBC1,g722))
exten => 408,1,GoSub(testkit,outbound-test,1,(HA408,${ARG1},+12489360204,,,SBC1,g722|ulaw))
exten => 409,1,GoSub(testkit,outbound-test,1,(HA409,${ARG1},+12489360205,,,SBC1,ulaw|alaw|g729|g722))
exten => 410,1,GoSub(testkit,outbound-test,1,(HA410,${ARG1},+12489360221,,,SBC1,g722|ulaw|alaw|g729))

exten => 451,1,GoSub(testkit,outbound-test,1,(HA451,${ARG1},+15126520032,,,SBC1,ulaw))
exten => 452,1,GoSub(testkit,outbound-test,1,(HA452,${ARG1},+15126520114,,,SBC1,alaw))
exten => 453,1,GoSub(testkit,outbound-test,1,(HA453,${ARG1},+15126520115,,,SBC1,ulaw|alaw))
exten => 454,1,GoSub(testkit,outbound-test,1,(HA454,${ARG1},+15126520116,,,SBC1,alaw|ulaw))
exten => 455,1,GoSub(testkit,outbound-test,1,(HA455,${ARG1},+15126520019,,,SBC1,g729))
exten => 456,1,GoSub(testkit,outbound-test,1,(HA456,${ARG1},+15126520032,,,SBC1,g729|ulaw))
exten => 457,1,GoSub(testkit,outbound-test,1,(HA457,${ARG1},+15126520114,,,SBC1,g722))
exten => 458,1,GoSub(testkit,outbound-test,1,(HA458,${ARG1},+15126520115,,,SBC1,g722|ulaw))
exten => 459,1,GoSub(testkit,outbound-test,1,(HA459,${ARG1},+15126520116,,,SBC1,ulaw|alaw|g729|g722))
exten => 460,1,GoSub(testkit,outbound-test,1,(HA460,${ARG1},+15126520019,,,SBC1,g722|ulaw|alaw|g729))

exten => 600,1,GoSub(testkit,outbound-test,1,(HA600,${ARG1},+19844653560,,,SBC1,ulaw))
exten => 601,1,GoSub(testkit,outbound-test,1,(HA601,${ARG1},+19844653568,,,SBC1,alaw))
exten => 602,1,GoSub(testkit,outbound-test,1,(HA602,${ARG1},+19844653725,,,SBC1,ulaw|alaw))
exten => 603,1,GoSub(testkit,outbound-test,1,(HA603,${ARG1},+19844653726,,,SBC1,alaw|ulaw))
exten => 604,1,GoSub(testkit,outbound-test,1,(HA604,${ARG1},+19844653727,,,SBC1,g729))
exten => 605,1,GoSub(testkit,outbound-test,1,(HA605,${ARG1},+19844653728,,,SBC1,g729|ulaw))
exten => 606,1,GoSub(testkit,outbound-test,1,(HA606,${ARG1},+19844653729,,,SBC1,g722))
exten => 607,1,GoSub(testkit,outbound-test,1,(HA607,${ARG1},+19844653891,,,SBC1,g722|ulaw))
exten => 608,1,GoSub(testkit,outbound-test,1,(HA608,${ARG1},+19844653892,,,SBC1,g722|g729))
exten => 609,1,GoSub(testkit,outbound-test,1,(HA609,${ARG1},+19844653915,,,SBC1,g722|g729|ulaw))
exten => 610,1,GoSub(testkit,outbound-test,1,(HA610,${ARG1},+19844653952,,,SBC1,ulaw|alaw|g729|g722))
exten => 611,1,GoSub(testkit,outbound-test,1,(HA611,${ARG1},+19844653963,,,SBC1,amrwb|ulaw|alaw|g729|g722))


exten => +19723670202,1,NoOp(IVR Example) 
 same => n,Ringing()
 same => n,Wait(1)
 same => n,Answer()
 same => n,Playback(hello-world)
 same => n,Set(PJSIP_MEDIA_OFFER(audio)=!all,722)
 same => n,Set(PJSIP_SEND_SESSION_REFRESH()=invite)
 same => n,Playback(hello-world)
 same => n,Set(PJSIP_MEDIA_OFFER(audio)=!all,711)
 same => n,Set(PJSIP_SEND_SESSION_REFRESH()=invite)
 same => n,Playback(hello-world)
 same => n,Set(PJSIP_MEDIA_OFFER(audio)=!all,722)
 same => n,Set(PJSIP_SEND_SESSION_REFRESH()=invite)
 same => n,Playback(hello-world)
 same => n,hangup()

exten => 301,1,GoSub(testkit,outbound-test,1,(HA301-CN,${ARG1},+15126520032,,,SBC1,ulaw))
