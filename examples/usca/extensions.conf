; extensions.conf - the Asterisk dial plan
;
[general]
static=yes
writeprotect=no
clearglobalvars=no

[globals]
INTERNAL_DIAL_OPT=,20

; Dial-Users handles calls to internal extensions.
; Calls coming into this context may be *external* or *internal* in origin.
[Dial-Users]
exten = _+X.,1,Verbose(1, "Dial-User ${CALLERID(num)} dialed ${EXTEN}.")
 same = n,Set(LOCAL(ext)=${EXTEN})
 same = n,Set(LOCAL(dev)=${ARG1})
 same = n,Set(LOCAL(cntx)=${ARG2})
 same = n,Dial(${dev}${INTERNAL_DIAL_OPT})
 same = n,Goto(dialed-${DIALSTATUS},1)

exten = dialed-NOANSWER,1,NoOp(STATUS: NOANSWER)
 same = n,Return()

exten = dialed-BUSY,1,NoOp(STATUS: BUSY)
 same = n,Return()

exten = dialed-CHANUNAVAIL,1,NoOp(STATUS: CHANUNAVAIL)
 same = n,Return()

exten = _dialed-.,1,NoOp(Dialed other ${DIALSTATUS})
 same = n,Goto(dialed-NOANSWER,1)

[stdexten]
;
; Standard extension subroutine:
;   ${EXTEN} - Extension
;   ${ARG1} - Device(s) to ring
;   ${ARG2} - Optional context in Voicemail
;
; Note that the current version will drop through to the next priority in the
; case of their pressing '#'.  This gives more flexibility in what do to next:
; you can prompt for a new extension, or drop the call, or send them to a
; general delivery mailbox, or...
;
; The use of the LOCAL() function is purely for convenience.  Any variable
; initially declared as LOCAL() will disappear when the innermost Gosub context
; in which it was declared returns.  Note also that you can declare a LOCAL()
; variable on top of an existing variable, and its value will revert to its
; previous value (before being declared as LOCAL()) upon Return.
;
exten => _X.,50000(stdexten),NoOp(Start stdexten)
exten => _X.,n,Set(LOCAL(ext)=${EXTEN})
exten => _X.,n,Set(LOCAL(dev)=${ARG1})
exten => _X.,n,Set(LOCAL(cntx)=${ARG2})
;exten => _X.,n,Set(LOCAL(mbx)=${ext}${IF($[!${ISNULL(${cntx})}]?@${cntx})})
exten => _X.,n,Dial(${dev},20)				; Ring the interface, 20 seconds maximum
exten => _X.,n,Goto(stdexten-${DIALSTATUS},1)		; Jump based on status (NOANSWER,BUSY,CHANUNAVAIL,CONGESTION,ANSWER)

exten => _+X.,50000(stdexten),NoOp(Start stdexten)
exten => _+X.,n,Set(LOCAL(ext)=${EXTEN})
exten => _+X.,n,Set(LOCAL(dev)=${ARG1})
exten => _+X.,n,Set(LOCAL(cntx)=${ARG2})
;exten => _X.,n,Set(LOCAL(mbx)=${ext}${IF($[!${ISNULL(${cntx})}]?@${cntx})})
exten => _+X.,n,Dial(${dev},20)				; Ring the interface, 20 seconds maximum
exten => _+X.,n,Goto(stdexten-${DIALSTATUS},1)		; Jump based on status (NOANSWER,BUSY,CHANUNAVAIL,CONGESTION,ANSWER)


exten => stdexten-NOANSWER,1,VoiceMail(${mbx},u)	; If unavailable, send to voicemail w/ unavail announce
exten => stdexten-NOANSWER,n,Return()			; If they press #, return to start

exten => stdexten-BUSY,1,VoiceMail(${mbx},b)		; If busy, send to voicemail w/ busy announce
exten => stdexten-BUSY,n,Return()			; If they press #, return to start

exten => _stde[x]te[n]-.,1,Goto(stdexten-NOANSWER,1)	; Treat anything else as no answer

exten => a,1,VoiceMailMain(${mbx})			; If they press *, send the user into VoicemailMain
exten => a,n,Return()

[stdPrivacyexten]
;
; Standard extension subroutine:
;   ${ARG1} - Extension
;   ${ARG2} - Device(s) to ring
;   ${ARG3} - Optional DONTCALL context name to jump to (assumes the s,1 extension-priority)
;   ${ARG4} - Optional TORTURE context name to jump to (assumes the s,1 extension-priority)`
;   ${ARG5} - Context in voicemail (if empty, then "default")
;
; See above note in stdexten about priority handling on exit.
;
exten => _X.,60000(stdPrivacyexten),NoOp(Start stdPrivacyexten)
exten => _X.,n,Set(LOCAL(ext)=${ARG1})
exten => _X.,n,Set(LOCAL(dev)=${ARG2})
exten => _X.,n,Set(LOCAL(dontcntx)=${ARG3})
exten => _X.,n,Set(LOCAL(tortcntx)=${ARG4})
exten => _X.,n,Set(LOCAL(cntx)=${ARG5})

exten => _X.,n,Set(LOCAL(mbx)="${ext}"$["${cntx}" ? "@${cntx}" :: ""])
exten => _X.,n,Dial(${dev},20,p)			; Ring the interface, 20 seconds maximum, call screening
						; option (or use P for databased call _X.creening)
exten => _X.,n,Goto(stdexten-${DIALSTATUS},1)		; Jump based on status (NOANSWER,BUSY,CHANUNAVAIL,CONGESTION,ANSWER)

exten => stdexten-NOANSWER,1,VoiceMail(${mbx},u)	; If unavailable, send to voicemail w/ unavail announce
exten => stdexten-NOANSWER,n,NoOp(Finish stdPrivacyexten NOANSWER)
exten => stdexten-NOANSWER,n,Return()			; If they press #, return to start

exten => stdexten-BUSY,1,VoiceMail(${mbx},b)		; If busy, send to voicemail w/ busy announce
exten => stdexten-BUSY,n,NoOp(Finish stdPrivacyexten BUSY)
exten => stdexten-BUSY,n,Return()			; If they press #, return to start

exten => stdexten-DONTCALL,1,Goto(${dontcntx},s,1)	; Callee chose to send this call to a polite "Don't call again" script.

exten => stdexten-TORTURE,1,Goto(${tortcntx},s,1)	; Callee chose to send this call to a telemarketer torture script.

exten => _stde[x]te[n]-.,1,Goto(stdexten-NOANSWER,1)	; Treat anything else as no answer

exten => a,1,VoiceMailMain(${mbx})		; If they press *, send the user into VoicemailMain
exten => a,n,Return()


; Load Utilities
##include <ext_utilities.conf>


[macro-LBDial]
exten => s,1,NoOp(Macro:LBDial)
;exten => s,n,GotoIf($[${LEN(${BLINDTRANSFER})} = 0]?here)
;exten => s,n,NoOp(BLINDTRANSFER=${BLINDTRANSFER})
;exten => s,n,Set(STATION=${CUT(BLINDTRANSFER,,-1):4})
;exten => s,n,NoOp(STATION=${STATION})
;exten => s,n,SIPAddHeader(Diversion:  <sip:${STATION}@10.0.0.131>\;privacy=off\;reason=unconditional)
;exten => s,n,Set(PJSIP_HEADER(add,P-Asserted-Identity)=sip:123456789@10.0.0.131)
exten => s,n(here),Dial(PJSIP/${ARG1}@CAEntLvl-no8g-EBI1,${ARG2},${ARG3},${ARG4})
;exten => s,n(here),Dial(SIP/${ARG1}@VerizonSBCaaS1,${ARG2},${ARG3},${ARG4})

[catch-all]
exten => _[+0-9].,1,Answer()
exten => _[+0-9].,n,Progress()
exten => _[+0-9].,n,Wait(1)
exten => _[+0-9].,n,Playback(hello-world)
exten => _[+0-9].,n,Wait(1)
exten => _[+0-9].,n,Echo()
exten => _[+0-9].,n,Wait(1)
exten => _[+0-9].,n,Hangup()

[handler]
;exten => addheader,1,Set(PJSIP_HEADER(add,Diversion)=<sip:7783090451@10.0.0.230>\;privacy=off\;reason=unconditional)
exten => addheader,1,Set(PJSIP_HEADER(add,Diversion)=<sip:4384690257@10.0.0.230>\;privacy=off\;reason=unconditional)
;exten => addheader,1,Set(REDIRECTING(from-num)=<7783090451>)

[outbound]
;; E.164 Digit Dialing
;exten => _+1NXXNXXXXXX,1,NoOp(Outbound E.164 Pattern)
; same => n,Set(CALLERID(all)= "ATG ALCID Test" <6123066440>)
; same => n,Dial(PJSIP/${EXTEN}@CAEntLvl-CanadaEBI1,,b(handler^addheader^1))
; same => n,Congestion

; Dialing *codes
exten => _*[0-9].,1,NoOp(Outbound Star Codes)
 same => n,Dial(PJSIP/${EXTEN}@USCAEL-EBI2)
 same => n,Congestion

; Dialing 911
exten => 911,1,NoOp(Outbound 911)
 same => n,Dial(PJSIP/${EXTEN}@USCAEL-EBI2)
 same => n,Congestion

; N11 Digit Dialing NOT 911
exten => _[2345678]11,1,NoOp(Outbound N11 Pattern WITHOUT 911)
 same => n,Dial(PJSIP/${EXTEN}@USCAEL-EBI2)
 same => n,Congestion

exten => _X.,1,NoOP(Outbound all non-plus patterns)
 same => n,Dial(PJSIP/${EXTEN}@USCAEL-EBI2)
 same => n,Congestion

exten => _+X.,1,NoOP(Outbound all plus patterns)
 same => n,Dial(PJSIP/${EXTEN}@USCAEL-EBI2)
 same => n,Congestion

exten => 0,1,NoOP(Outbound Operator 0)
 same => n,Dial(PJSIP/${EXTEN}@USCAEL-EBI2)
 same => n,Congestion

exten => 00,1,NoOP(Outbound Operator 00)
 same => n,Dial(PJSIP/${EXTEN}@USCAEL-EBI2)
 same => n,Congestion

[from-verizon]
exten => +19193798730,1,Goto(TestCases,portal,1)

include => sip-phones
include => catch-all

[from-phone]
include => sip-phones
include => outbound 
include => catch-all

[TestCases]
exten => portal,1,NoOp(Portal)
 same => n,Ringing()
 same => n,Wait(1)
 same => n,Answer()
 same => n,Gosub(testkit,validate-caller,1(${CALLERID(num)},access-code,9459))
 
;Select and Run Test
 same => n(validCaller),NoOp(Valid Caller)
 same => n,Playback(beep)
 same => n,Read(MyDigits,,0,n,,60)
 same => n,SayAlpha(${MyDigits})
 same => n,GoSub(TestCases,${MyDigits},1)
 same => n,hangup()


; List of predefined tests
; TestOut (Title, To, From, Diversion, Paid, EBI)
; Gosub(testkit,outbounf-test,1,([Title],[To],[From],[Diversion],[Paid],[EBI],[Codec|List]))

exten => 100,1,GoSub(testkit,outbound-test,1,(C100,6019922341,6012590380,,,ECN1-EBI1,,${DOM1}))
exten => 101,1,GoSub(testkit,outbound-test,1,(C101,9198517721,9193798130,,,ECN1-EBI1,,${DOM1}))

[sip-phones]
include => stdexten

;United States
exten => +19193798728,1,GoSub(${EXTEN},stdexten(PJSIP/${EXTEN}))
exten => +19193798729,1,GoSub(${EXTEN:2},stdexten(PJSIP/${EXTEN:2}))
exten => +19193798730,1,GoSub(${EXTEN:2},stdexten(PJSIP/${EXTEN:2}))
;Mexico
exten => +525553390153,1,GoSub(${EXTEN},stdexten(PJSIP/${EXTEN}))
exten => +525553390154,1,GoSub(${EXTEN},stdexten(PJSIP/${EXTEN}))
exten => +523321020185,1,GoSub(${EXTEN},stdexten(PJSIP/${EXTEN}))
exten => +523321020186,1,GoSub(${EXTEN},stdexten(PJSIP/${EXTEN}))
;Argentina
exten => +541152793323,1,GoSub(${EXTEN},stdexten(PJSIP/${EXTEN}))
exten => +541152793327,1,GoSub(${EXTEN},stdexten(PJSIP/${EXTEN}))
; Brazil
exten => +551141189394,1,GoSub(${EXTEN},stdexten(PJSIP/${EXTEN}))
exten => +551141189478,1,GoSub(${EXTEN},stdexten(PJSIP/${EXTEN}))


