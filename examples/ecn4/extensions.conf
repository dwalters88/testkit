[globals]
INTERNAL_DIAL_OPT=,20
MAXSBC=2
CURRENTSBC=0

;Domains for this project.  DOM is the default on various subroutines.
DOM=1379868737.globalipcom.com ; This is the Verizon customer Domain.  This allows us to respond regardless of which EBI we use. 
DOM1=verizoninternals01.globalipcom.com ; This is the Verizon customer Domain.  This allows us to respond regardless of which EBI we use. 
DOM2=1379868737.globalipcom.com ; This is the Verizon customer Domain.  This allows us to respond regardless of which EBI we use. 

#include testkit/testkit.conf

[stdexten]
;
; Standard extension subroutine:
;   ${EXTEN} - Extension
;   ${ARG1} - Device(s) to ring
;   ${ARG2} - Optional context in Voicemail
;
; Note that the current version will drop through to the next priority in the
; case of their pressing '#'.  This gives more flexibility in what do to next:
; you can prompt for a new extension, or drop the call, or send them to a
; general delivery mailbox, or...
;
; The use of the LOCAL() function is purely for convenience.  Any variable
; initially declared as LOCAL() will disappear when the innermost Gosub context
; in which it was declared returns.  Note also that you can declare a LOCAL()
; variable on top of an existing variable, and its value will revert to its
; previous value (before being declared as LOCAL()) upon Return.
;
exten => _X.,50000(stdexten),NoOp(Start stdexten)
exten => _X.,n,Set(LOCAL(ext)=${EXTEN})
exten => _X.,n,Set(LOCAL(dev)=${ARG1})
exten => _X.,n,Set(LOCAL(cntx)=${ARG2})
;exten => _X.,n,Set(LOCAL(mbx)=${ext}${IF($[!${ISNULL(${cntx})}]?@${cntx})})
exten => _X.,n,Dial(${dev},20)                          ; Ring the interface, 20 seconds maximum
exten => _X.,n,Goto(stdexten-${DIALSTATUS},1)           ; Jump based on status (NOANSWER,BUSY,CHANUNAVAIL,CONGESTION,ANSWER)

exten => _+X.,50000(stdexten),NoOp(Start stdexten)
exten => _+X.,n,Set(LOCAL(ext)=${EXTEN})
exten => _+X.,n,Set(LOCAL(dev)=${ARG1})
exten => _+X.,n,Set(LOCAL(cntx)=${ARG2})
;exten => _X.,n,Set(LOCAL(mbx)=${ext}${IF($[!${ISNULL(${cntx})}]?@${cntx})})
exten => _+X.,n,Dial(${dev},20)                         ; Ring the interface, 20 seconds maximum
exten => _+X.,n,Goto(stdexten-${DIALSTATUS},1)          ; Jump based on status (NOANSWER,BUSY,CHANUNAVAIL,CONGESTION,ANSWER)


exten => stdexten-NOANSWER,1,VoiceMail(${mbx},u)        ; If unavailable, send to voicemail w/ unavail announce
exten => stdexten-NOANSWER,n,Return()                   ; If they press #, return to start

exten => stdexten-BUSY,1,VoiceMail(${mbx},b)            ; If busy, send to voicemail w/ busy announce
exten => stdexten-BUSY,n,Return()                       ; If they press #, return to start

exten => _stde[x]te[n]-.,1,Goto(stdexten-NOANSWER,1)    ; Treat anything else as no answer

exten => a,1,VoiceMailMain(${mbx})                      ; If they press *, send the user into VoicemailMain
exten => a,n,Return()

[Handlers]
exten => Dialer,1,NoOp(Handler:Dialer ${ARG1} ${ARG2})
; same => n,GotoIf($[${LEN(${BLINDTRANSFER})} = 0]?here)
; same => n,NoOp(BLINDTRANSFER=${BLINDTRANSFER})
; same => n,Set(STATION=${CUT(BLINDTRANSFER,,-1):4})
; same => n,NoOp(STATION=${STATION})
;same => n,SIPAddHeader(Diversion:  <sip:${STATION}@10.0.0.98>\;privacy=off\;reason=unconditional)
 same => n(here),Dial(PJSIP/${ARG1}@SBC${CURRENTSBC},,wW)
 same => n,Return()

exten => RRNDialer,1,NoOp(Handler:RRNDialer ${ARG1} ${ARG2})
 same => n,NoOp(Dial SBC${CURRENTSBC} TEST of Round Robin)
 same => n,Set(GLOBAL(CURRENTSBC)=${IF($[${CURRENTSBC} >= ${MAXSBC}]?1:$[${CURRENTSBC}+1])})
 same => n(here),Dial(PJSIP/${ARG1}@SBC${CURRENTSBC},,wW)
 same => n,Return()

exten => LBDialer,1,NoOp(Handler:LBDialer ${ARG1} ${ARG2})
 same => n,Set(SBCS=3) ; Number of SBCS, all in Endpoints names SBCx
 same => n,Set(INDEX=1)
 same => n,Set(RANDOM=${RAND(0,$[${SBCS} - 1])})
 same => n(CALL),NoOP(Attempt Call)
 same => n,Set(TARGET=SBC$[(${INDEX} + ${RANDOM})%(${SBCS}) + 1])
 same => n,Dial(PJSIP/${ARG1}@${TARGET},${ARG2},${ARG3},${ARG4})
 same => n,GotoIf($[${INDEX} >= ${SBCS}]?END:)
 same => n,Set(INDEX=$[${INDEX}+1])
 same => n,GotoIf($["${DIALSTATUS}" = "CHANUNAVAIL"]?CALL:)
 same => n,GotoIf($["${DIALSTATUS}" = "CONGESTION"]?CALL:)
 same => n(END),NoOP(End of Macro:LBDial)
 same => n,Return()
; SBCS= # of SBCs
; index = RND between 1 - SBCs
; stop  = index + SBCs - 1
; Call via Index
; if success goto end
; if index = stop goto end
; index = index + 1
; Goto call
;
exten = SIPExten,1,Verbose(1, "DialUser ${CALLERID(num)} dialed ${ARG1} ${ARG2} ${ARG3}.")
 same = n,Set(LOCAL(ext)=${ARG1})
 same = n,Set(LOCAL(dev)=${ARG2})
 same = n,Set(LOCAL(cntx)=${ARG3})
 same = n,Dial(${dev}${INTERNAL_DIAL_OPT})
 same = n,Goto(dialed-${DIALSTATUS},1)

exten = dialed-NOANSWER,1,NoOp(STATUS: NOANSWER)
 same = n,Return()

exten = dialed-BUSY,1,NoOp(STATUS: BUSY)
 same = n,Return()

exten = dialed-CHANUNAVAIL,1,NoOp(STATUS: CHANUNAVAIL)
 same = n,Return()

exten = _dialed-.,1,NoOp(Dialed other ${DIALSTATUS})
 same = n,Goto(dialed-NOANSWER,1)

; Add Header to the Outbound Call
exten => addHeaders,1,NoOp(Set Both Diversion[${ARG1}] Paid[${ARG2}] using Domain [${ARG3}])
 same => n,NoOP(PASS BY ARGUMENT ${ARG1} ${ARG2} ${ARG3})

 ; Future set the Domain if provided. Need to tes tthis line first.
 ;same => n,Set(MyDOM=IF($["${ARG3}" = ""]?${DOM1}:${ARG3}))

 same => n,GotoIf($["${ARG1}" = ""]?skipDiversion)}
 same => n,set(PJSIP_HEADER(add,Diversion)=<sip:${ARG1}@${DOM1}>);\;privacy=off\;reason=unconditional)
 same => n(skipDiversion),NoOp()

 same => n,GotoIf($["${ARG2}" = ""]?skipPAID)}
 same => n,Set(PJSIP_HEADER(add,P-Asserted-Identity)=<sip:${ARG2}@${DOM1}>)
 same => n(skipPAID),NoOp()

 same => n,NoOp(CALLID = ${CHANNEL(pjsip,call-id)})
 same => n,Set(CDR(callid)=${CHANNEL(pjsip,call-id)})
 same => n,return()

;[TestLaunch]
;;Inbound to the test Launchpad
;
;;Portal Telephone Numebr
;exten => +19192342100,1,NoOp(Inbound Test selection)
; same => n,Ringing()
; same => n,Answer
; same => n,Wait(1)
;
;;Validate Caller
; same => n,NoOp(CALLERID(num) = ${CALLERID(num)})
; same => n,GotoIf($["${CALLERID(num)}" = "+16123066440"]?validCaller)}; David Cell
; same => n,GotoIf($["${CALLERID(num)}" = "+17632584535"]?validCaller)}; David Cell
; same => n,GotoIf($["${CALLERID(num)}" = "+17038526073"]?validCaller)}; Kristie Desk
; same => n,GotoIf($["${CALLERID(num)}" = "+16012590380"]?validCaller)}; Kristie Cell
; same => n,GotoIf($["${CALLERID(num)}" = "+17038526073"]?validCaller)}; Chris Desk
; same => n,GotoIf($["${CALLERID(num)}" = "+19192088695"]?validCaller)}; Chris Cell
; same => n,GotoIf($["${CALLERID(num)}" = "+17038879441"]?validCaller)}; Sanjay Cell
; same => n,GotoIf($["${CALLERID(num)}" = "+17038879441"]?validCaller)}; Sanjay Cell
; same => n,GotoIf($["${CALLERID(num)}" = "+33170737822"]?validCaller)}; Francoise Desk
; same => n,GotoIf($["${CALLERID(num)}" = "+33621765116"]?validCaller)}; Francoise Mobile
; same => n,GotoIf($["${CALLERID(num)}" = "+33685928708"]?validCaller)}; Francoise Mobile 2
; same => n,GotoIf($["2" = "1"]?validCaller)}
; same => n,Playback(beeperr)
; same => n,Playback(beeperr)
; same => n,Read(MyDigits,,0,n,,60)
; same => n,NoOp(Reciecved Mydigits = ${MyDIgits})
; same => n,GotoIf($["${MyDigits}" = "9459"]?validCaller)}
; same => n,Playback(beeperr)
; same => n,Playback(beeperr)
; same => n,hangup()
;
;;Select and Run Test
; same => n(validCaller),NoOp(Valid Caller)
; same => n,Playback(beep)
; same => n,Read(MyDigits,,0,n,,60)
; same => n,SayAlpha(${MyDigits})
; same => n,GoSub(TestCases,${MyDigits},1)
; same => n,hangup()
;
;; Macro to make outbound call with a variety of SIP headers
;exten =>TestOut,1,NoOp(TestOut ([${ARG1}],[${ARG2}],[${ARG3}],[${ARG4}],[${ARG5}],[${ARG6}]))
; same => n,Set(ARRAY(Title,To,From,Diversion,PAID,EBI)=${ARG1},${ARG2},${ARG3},${ARG4},${ARG5},${ARG6})
; same => n,NoOp(TestOut ([${Title}],[${To}],[${From}],[${Diversion}],[${PAID}],[${EBI}]))
;
; ; Set Title
; same => n,Set(Title=${IF($[ "${Title}" = ""]?#:${Title})})
; same => n,Set(Title=${IF($[ "${Title}" = "#"]?ECN Test(${EXTEN}):${Title})})
; same => n,Set(Caller=${CALLERID(name)})
; same => n,set(CALLERID(name)=${Title}-${Caller})
; same => n,set(CALLERID(num)=${From})
;
; ; Set correct EBI source, default to LLD
; same => n,Set(EBI=${IF($[ "${EBI}" = ""]?LLD:${EBI})})
; same => n,Set(EBI=${IF($[ ${EBI} = LLD]?SBC1:${EBI})})
; same => n,Set(EBI=${IF($[ ${EBI} = LDO]?SBC2:${EBI})})
;
; ; Make Call
; same => n,NoOp(TestOut ([${Title}],[${To}],[${From}],[${Diversion}],[${PAID}],[${EBI}]))
; same => n,Dial(PJSIP/${To}@${EBI},,b(Handlers^addHeaders^1(${Diversion},${PAID})))
;
;;;; Record Audio
;exten => RecAudio,1,NoOp(Record Audio)
; same => n,Set(RecTime=${STRFTIME(,,%Y%m%dT%H%M%S%3q)})
; same => n,Set(RecType=g722)
; same => n,Set(RecFile=${RecTime})
; same => n,Record(recordings/${RecFile}.${RecType})
; ;same => n,System(/usr/sbin/asterisk -rx "file convert recordings/${RecFile}.${RecType} recordings/${RecFile}.g729")
; ;same => n,System(/usr/sbin/asterisk -rx "file convert recordings/${RecFile}.${RecType} recordings/${RecFile}.ulaw")
; same => n,System(/usr/sbin/asterisk -rx "file convert recordings/${RecFile}.${RecType} recordings/A.g729")
; same => n,System(/usr/sbin/asterisk -rx "file convert recordings/${RecFile}.${RecType} recordings/B.ulaw")
; same => n,Wait(1)
; same => n,Playback(recordings/${RecFile})
; same => n,Playback(recordings/B)
; same => n,Playback(recordings/A)
; same => n,Playback(recordings/${RecFile})
; same => n,Return(${RecFile})

[catch-all]
exten => _[+0-9].,1,GoSub(testkit,catch-all,1,(custom/hal-sorry-dave))
;exten => _[+0-9].,1,Answer()
;exten => _[+0-9].,n,Progress()
;exten => _[+0-9].,n,Wait(1)
;exten => _[+0-9].,n,Playback(custom/hal-sorry-dave)
;;exten => _[+0-9].,n,Playback(hello-world)
;exten => _[+0-9].,n,Wait(1)
;exten => _[+0-9].,n,Echo()
;exten => _[+0-9].,n,Wait(1)
;exten => _[+0-9].,n,Hangup()

[from-verizon]
; USELECN4 SG1 - 19842284627-28, STN 19192342100
exten => +19192342100,1,Goto(from-verizon,portal,1)
exten => +12677686856,1,Goto(from-verizon,portal,1)

exten => portal,1,NoOp(Portal)
 same => n,Ringing()
 same => n,Wait(1)
 same => n,Answer()
 same => n,Gosub(testkit,validate-caller,1(${CALLERID(num)},access-code,9459))
 ;same => n,Playback(hello-world)
 ;Select and Run Test
 same => n(validCaller),NoOp(Valid Caller)
 same => n,Playback(beep)
 same => n,Read(MyDigits,,0,n,,60)
 same => n,SayAlpha(${MyDigits})
 same => n,GoSub(TestCases,${MyDigits},1)
 same => n,hangup()

;include => TestLaunch
include => TestCases
include => sip-phones
include => catch-all

[from-other]
include => sip-phones
include => catch-all

[outbound]
exten => _XXXX,1,NoOp(Dialed four digit extention)
 same => n,Dial(PJSIP/${EXTEN}@OTHER)
 same => n,Congestion

;; Send anything we have to Verizon  all patterns
exten => _[*+0-9].,1,NoOP(Outbound all patterns ${EXTEN})
 same => n,GoSub(Handlers,RRNDialer,1,(${EXTEN}))
 same => n,Congestion

;; E.164 Digit Dialing
;exten => _+1NXXNXXXXXX,1,NoOp(Outbound E.164 Pattern)
; same => n,Set(CALLERID(all)= "ATG ALCID Test" <6123066440>)
; same => n,Dial(PJSIP/${EXTEN}@CAEntLvl-CanadaEBI1,,b(handler^addheader^1))
; same => n,Congestion

;; Dialing 911
;exten => 911,1,NoOp(Outbound 911)
;; same => n,Dial(PJSIP/${EXTEN}@USCAEL-EBI2)
; same => n,Congestion
;
;; N11 Digit Dialing NOT 911
;exten => _[2345678]11,1,NoOp(Outbound N11 Pattern WITHOUT 911)
; same => n,Dial(PJSIP/${EXTEN}@USCAEL-EBI2)
; same => n,Congestion
;
;exten => _X.,1,NoOP(Outbound all non-plus patterns)
; same => n,Dial(PJSIP/${EXTEN}@USCAEL-EBI2)
; same => n,Congestion
;
;exten => _+X.,1,NoOP(Outbound all plus patterns)
; same => n,Dial(PJSIP/${EXTEN}@USCAEL-EBI2)
; same => n,Congestion
;
;exten => 0,1,NoOP(Outbound Operator 0)
; same => n,Dial(PJSIP/${EXTEN}@USCAEL-EBI2)
; same => n,Congestion
;
;exten => 00,1,NoOP(Outbound Operator 00)
; same => n,Dial(PJSIP/${EXTEN}@USCAEL-EBI2)
; same => n,Congestion
;
[from-phone]
exten => 22,1,NoOp(Record and play audio)
 same => n,Answer(500)
 same => n,GoSub(Handlers,RecAudio,1)
 same => n,Hangup()
;include => sip-phones
include => outbound
include => catch-all

[sip-phones]
include => stdexten

exten => 8888,1,GoSub(${EXTEN},Dial-Users(PJSIP/${EXTEN}))
exten => +14696973520,1,GoSub(Handlers,SIPExten,1,(${EXTEN},PJSIP/${EXTEN}))


[TestCases]
; List of predefined tests
; TestOut (Title, To, From, Diversion, Paid, EBI)
; Gosub(testkit,outbounf-test,1,([Title],[To],[From],[Diversion],[Paid],[EBI],[Codec|List]))


exten => 100,1,GoSub(testkit,outbound-test,1,(C100,6019922341,6012590380,,,ECN1-EBI1,,${DOM1}))
exten => 101,1,GoSub(testkit,outbound-test,1,(C101,9198517721,9193798130,,,ECN1-EBI1,,${DOM1}))
exten => 102,1,GoSub(testkit,outbound-test,1,(C102,7038526073,6012590380,,,ECN1-EBI1,,${DOM1}))
exten => 103,1,GoSub(testkit,outbound-test,1,(C103,7038526073,9193798130,,,ECN1-EBI1,,${DOM1}))
exten => 104,1,GoSub(testkit,outbound-test,1,(C104,+33160306053,6012590380,,,ECN1-EBI1,,${DOM1}))
exten => 105,1,GoSub(testkit,outbound-test,1,(C105,+33160306053,9193798130,,,ECN1-EBI1,,${DOM1}))
exten => 106,1,GoSub(testkit,outbound-test,1,(C106,8777777176,6012590380,,,ECN1-EBI1,,${DOM1}))
exten => 107,1,GoSub(testkit,outbound-test,1,(C107,8777777176,9193798130,,,ECN1-EBI1,,${DOM1}))
exten => 108,1,GoSub(testkit,outbound-test,1,(C108,8777777176,8003435740,,,ECN1-EBI1,,${DOM1}))
exten => 109,1,GoSub(testkit,outbound-test,1,(C109,8777777176,8003435740,,,ECN1-EBI1,,${DOM1}))
exten => 110,1,GoSub(testkit,outbound-test,1,(C110,7633238611,8003435740,,,ECN1-EBI1,,${DOM1}))
exten => 117,1,GoSub(testkit,outbound-test,1,(C117,9198517721,9193798130,2677686855,,ECN1-EBI1,,${DOM1}))
exten => 118,1,GoSub(testkit,outbound-test,1,(C118,9198517721,6012590380,6012590380,,ECN1-EBI1,,${DOM1}))
exten => 119,1,GoSub(testkit,outbound-test,1,(C119,9198517721,6012590380,9193798130,,ECN1-EBI1,,${DOM1}))
exten => 120,1,GoSub(testkit,outbound-test,1,(C120,9198517721,9193798130,6012590380,,ECN1-EBI1,,${DOM1}))
exten => 147,1,GoSub(testkit,outbound-test,1,(C147,9198517721,9193798130,,9193798131,ECN1-EBI1,,${DOM1}))
exten => 121,1,GoSub(testkit,outbound-test,1,(C121,9198517721,9193798130,,9192088695,ECN1-EBI1,,${DOM1}))
exten => 122,1,GoSub(testkit,outbound-test,1,(C122,9198517721,6012590380,,9193798130,ECN1-EBI1,,${DOM1}))
exten => 123,1,GoSub(testkit,outbound-test,1,(C123,9198517721,6012590380,,9192088695,ECN1-EBI1,,${DOM1}))
exten => 124,1,GoSub(testkit,outbound-test,1,(C124,9198517721,6012590380,9192306310,9192088695,ECN1-EBI1,,${DOM1}))
exten => 125,1,GoSub(testkit,outbound-test,1,(C125,9198517721,9193798130,9192306310,9192088695,ECN1-EBI1,,${DOM1}))
exten => 126,1,GoSub(testkit,outbound-test,1,(C126,9198517721,6012590380,9192306310,,ECN1-EBI1,,${DOM1}))
exten => 127,1,GoSub(testkit,outbound-test,1,(C127,9198517721,9193798130,9192306310,,ECN1-EBI1,,${DOM1}))
exten => 128,1,GoSub(testkit,outbound-test,1,(C128,9725600403,9193798130,,,ECN1-EBI1,,${DOM1}))
exten => 129,1,GoSub(testkit,outbound-test,1,(C129,9725600403,6012590380,,,ECN1-EBI1,,${DOM1}))
exten => 130,1,GoSub(testkit,outbound-test,1,(C130,+4969222289610,9193798130,,,ECN1-EBI1,,${DOM1}))
exten => 131,1,GoSub(testkit,outbound-test,1,(C131,+4969222289610,6012590380,,,ECN1-EBI1,,${DOM1}))
exten => 132,1,GoSub(testkit,outbound-test,1,(C132,9725600403,6012590380,9192088695,,ECN1-EBI1,,${DOM1}))
exten => 133,1,GoSub(testkit,outbound-test,1,(C133,9725600403,6012590380,9193798130,,ECN1-EBI1,,${DOM1}))
exten => 134,1,GoSub(testkit,outbound-test,1,(C134,9725600403,6012590380,9192306310,,ECN1-EBI1,,${DOM1}))
exten => 135,1,GoSub(testkit,outbound-test,1,(C135,9725600403,6012590380,,9193798130,ECN1-EBI1,,${DOM1}))
exten => 136,1,GoSub(testkit,outbound-test,1,(C136,9725600403,9193798130,,9192088695,ECN1-EBI1,,${DOM1}))
exten => 137,1,GoSub(testkit,outbound-test,1,(C137,7038526073,6012590380,,,ECN1-EBI1,,${DOM1}))
exten => 138,1,GoSub(testkit,outbound-test,1,(C138,7038526073,6012590380,,,ECN1-EBI1,,${DOM1}))
exten => 139,1,GoSub(testkit,outbound-test,1,(C139,411,6012590380,,,ECN1-EBI1,,${DOM1}))
exten => 140,1,GoSub(testkit,outbound-test,1,(C140,411,9193798130,,,ECN1-EBI1,,${DOM1}))
exten => 141,1,GoSub(testkit,outbound-test,1,(C141,711,6012590380,,,ECN1-EBI1,,${DOM1}))
exten => 142,1,GoSub(testkit,outbound-test,1,(C142,711,9193798130,,,ECN1-EBI1,,${DOM1}))
exten => 143,1,GoSub(testkit,outbound-test,1,(C143,711,6012590380,,,ECN1-EBI1,,${DOM1}))
exten => 144,1,GoSub(testkit,outbound-test,1,(C144,711,9193798130,,,ECN1-EBI1,,${DOM1}))
exten => 145,1,GoSub(testkit,outbound-test,1,(C145,911,6012590380,,,ECN1-EBI1,,${DOM1}))
exten => 146,1,GoSub(testkit,outbound-test,1,(C146,911,9193798130,,,ECN1-EBI1,,${DOM1}))
exten => 148,1,GoSub(testkit,outbound-test,1,(C148,7633238611,7634220032,,,ECN1-EBI1,,${DOM1}))
exten => 149,1,GoSub(testkit,outbound-test,1,(C149,7633238611,6012590380,,,ECN1-EBI1,,${DOM1}))
exten => 150,1,GoSub(testkit,outbound-test,1,(C150,7633238611,9193798130,,9193798131,ECN1-EBI1,,${DOM1}))
exten => 151,1,GoSub(testkit,outbound-test,1,(C151,7633238611,9193798130,,9192088695,ECN1-EBI1,,${DOM1}))
exten => 152,1,GoSub(testkit,outbound-test,1,(C152,7633238611,6012590380,,9193798130,ECN1-EBI1,,${DOM1}))
exten => 153,1,GoSub(testkit,outbound-test,1,(C153,7633238611,6012590380,,9192088695,ECN1-EBI1,,${DOM1}))
exten => 154,1,GoSub(testkit,outbound-test,1,(C154,7038526073,9193798130,,9193798131,ECN1-EBI1,,${DOM1}))
exten => 155,1,GoSub(testkit,outbound-test,1,(C155,7038526073,9193798130,,9192088695,ECN1-EBI1,,${DOM1}))
exten => 156,1,GoSub(testkit,outbound-test,1,(C156,7038526073,6012590380,,9193798130,ECN1-EBI1,,${DOM1}))
exten => 157,1,GoSub(testkit,outbound-test,1,(C157,7038526073,6012590380,,9192088695,ECN1-EBI1,,${DOM1}))

exten => 200,1,GoSub(testkit,outbound-test,1,(C200,6019922341,6012590380,,,ECN1-EBI2,,${DOM1}))
exten => 201,1,GoSub(testkit,outbound-test,1,(C201,9198517721,9193798130,,,ECN1-EBI2,,${DOM1}))
exten => 202,1,GoSub(testkit,outbound-test,1,(C202,7038526073,6012590380,,,ECN1-EBI2,,${DOM1}))
exten => 203,1,GoSub(testkit,outbound-test,1,(C203,7038526073,9193798130,,,ECN1-EBI2,,${DOM1}))
exten => 204,1,GoSub(testkit,outbound-test,1,(C204,+33160306053,6012590380,,,ECN1-EBI2,,${DOM1}))
exten => 205,1,GoSub(testkit,outbound-test,1,(C205,+33160306053,9193798130,,,ECN1-EBI2,,${DOM1}))
exten => 206,1,GoSub(testkit,outbound-test,1,(C206,8777777176,6012590380,,,ECN1-EBI2,,${DOM1}))
exten => 207,1,GoSub(testkit,outbound-test,1,(C207,8777777176,9193798130,,,ECN1-EBI2,,${DOM1}))
exten => 208,1,GoSub(testkit,outbound-test,1,(C208,8777777176,8003435740,,,ECN1-EBI2,,${DOM1}))
exten => 209,1,GoSub(testkit,outbound-test,1,(C209,8777777176,8003435740,,,ECN1-EBI2,,${DOM1}))
exten => 210,1,GoSub(testkit,outbound-test,1,(C210,9198517721,6012590380,9192088695,,ECN1-EBI2,,${DOM1}))
exten => 211,1,GoSub(testkit,outbound-test,1,(C211,9198517721,6012590380,9193798130,,ECN1-EBI2,,${DOM1}))
exten => 212,1,GoSub(testkit,outbound-test,1,(C212,9198517721,9193798130,9192088695,,ECN1-EBI2,,${DOM1}))
exten => 213,1,GoSub(testkit,outbound-test,1,(C213,9198517721,9193798130,,6012590380,ECN1-EBI2,,${DOM1}))
exten => 214,1,GoSub(testkit,outbound-test,1,(C214,9198517721,6012590380,,9193798130,ECN1-EBI2,,${DOM1}))
exten => 215,1,GoSub(testkit,outbound-test,1,(C215,9198517721,6012590380,,9192088695,ECN1-EBI2,,${DOM1}))
exten => 715,1,GoSub(testkit,outbound-test,1,(C215w1,19198517721,6012590380,,9192088695,ECN1-EBI2,,${DOM1}))
exten => 815,1,GoSub(testkit,outbound-test,1,(C215wplus1,+19198517721,6012590380,,9192088695,ECN1-EBI2,,${DOM1}))
exten => 216,1,GoSub(testkit,outbound-test,1,(C216,9198517721,6012590380,9192306310,9192088695,ECN1-EBI2,,${DOM1}))
exten => 217,1,GoSub(testkit,outbound-test,1,(C217,9198517721,9193798130,9192306310,6012590380,ECN1-EBI2,,${DOM1}))
exten => 218,1,GoSub(testkit,outbound-test,1,(C218,9198517721,6012590380,9192306310,,ECN1-EBI2,,${DOM1}))
exten => 219,1,GoSub(testkit,outbound-test,1,(C219,9198517721,9193798130,9192306310,,ECN1-EBI2,,${DOM1}))
exten => 220,1,GoSub(testkit,outbound-test,1,(C220,9725600403,9193798130,,,ECN1-EBI2,,${DOM1}))
exten => 221,1,GoSub(testkit,outbound-test,1,(C221,9725600403,6012590380,,,ECN1-EBI2,,${DOM1}))
exten => 222,1,GoSub(testkit,outbound-test,1,(C222,+4969222289610,9193798130,,,ECN1-EBI2,,${DOM1}))
exten => 223,1,GoSub(testkit,outbound-test,1,(C223,+4969222289610,6012590380,,,ECN1-EBI2,,${DOM1}))
exten => 224,1,GoSub(testkit,outbound-test,1,(C224,9725600403,6012590380,9192088695,,ECN1-EBI2,,${DOM1}))
exten => 225,1,GoSub(testkit,outbound-test,1,(C225,9725600403,6012590380,9193798130,,ECN1-EBI2,,${DOM1}))
exten => 226,1,GoSub(testkit,outbound-test,1,(C226,9725600403,6012590380,9192306310,,ECN1-EBI2,,${DOM1}))
exten => 227,1,GoSub(testkit,outbound-test,1,(C227,9725600403,6012590380,,9193798130,ECN1-EBI2,,${DOM1}))
exten => 228,1,GoSub(testkit,outbound-test,1,(C228,9725600403,9193798130,,9192088695,ECN1-EBI2,,${DOM1}))
exten => 229,1,GoSub(testkit,outbound-test,1,(C229,7038526073,6012590380,,,ECN1-EBI2,,${DOM1}))
exten => 230,1,GoSub(testkit,outbound-test,1,(C230,7038526073,6012590380,,,ECN1-EBI2,,${DOM1}))
exten => 231,1,GoSub(testkit,outbound-test,1,(C231,411,6012590380,,,ECN1-EBI2,,${DOM1}))
exten => 232,1,GoSub(testkit,outbound-test,1,(C232,411,9193798130,,,ECN1-EBI2,,${DOM1}))
exten => 233,1,GoSub(testkit,outbound-test,1,(C233,711,6012590380,,,ECN1-EBI2,,${DOM1}))
exten => 234,1,GoSub(testkit,outbound-test,1,(C234,711,9193798130,,,ECN1-EBI2,,${DOM1}))
exten => 235,1,GoSub(testkit,outbound-test,1,(C235,711,6012590380,,,ECN1-EBI2,,${DOM1}))
exten => 236,1,GoSub(testkit,outbound-test,1,(C236,711,9193798130,,,ECN1-EBI2,,${DOM1}))
exten => 237,1,GoSub(testkit,outbound-test,1,(C237,911,6012590380,,,ECN1-EBI2,,${DOM1}))
exten => 238,1,GoSub(testkit,outbound-test,1,(C238,911,9193798130,,,ECN1-EBI2,,${DOM1}))
exten => 239,1,GoSub(testkit,outbound-test,1,(C239,7633238611,8003435740,,,ECN1-EBI2,,${DOM1}))

exten => 300,1,GoSub(testkit,outbound-test,1,(C300,7633238611,7634220032,,,ECN4-EBI1,,${DOM2}))
exten => 301,1,GoSub(testkit,outbound-test,1,(C301,9198517721,9842284627,,,ECN4-EBI1,,${DOM2}))
exten => 302,1,GoSub(testkit,outbound-test,1,(C302,7038526073,6012590380,,,ECN4-EBI1,,${DOM2}))
exten => 303,1,GoSub(testkit,outbound-test,1,(C303,7038526073,9842284627,,,ECN4-EBI1,,${DOM2}))
exten => 304,1,GoSub(testkit,outbound-test,1,(C304,+33160306053,6012590380,,,ECN4-EBI1,,${DOM2}))
exten => 305,1,GoSub(testkit,outbound-test,1,(C305,+33160306053,9842284627,,,ECN4-EBI1,,${DOM2}))
exten => 306,1,GoSub(testkit,outbound-test,1,(C306,8777777176,6012590380,,,ECN4-EBI1,,${DOM2}))
exten => 307,1,GoSub(testkit,outbound-test,1,(C307,8777777176,9842284627,,,ECN4-EBI1,,${DOM2}))
exten => 308,1,GoSub(testkit,outbound-test,1,(C308,8777777176,8003435740,,,ECN4-EBI1,,${DOM2}))
exten => 310,1,GoSub(testkit,outbound-test,1,(C310,7633238611,8003435740,,,ECN4-EBI1,,${DOM2}))
exten => 317,1,GoSub(testkit,outbound-test,1,(C317,9198517721,9842284627,2677686855,,ECN4-EBI1,,${DOM2}))
exten => 318,1,GoSub(testkit,outbound-test,1,(C318,9198517721,6012590380,6012590380,,ECN4-EBI1,,${DOM2}))
exten => 319,1,GoSub(testkit,outbound-test,1,(C319,9198517721,6012590380,9842284627,,ECN4-EBI1,,${DOM2}))
exten => 320,1,GoSub(testkit,outbound-test,1,(C320,9198517721,9842284627,6012590380,,ECN4-EBI1,,${DOM2}))
exten => 347,1,GoSub(testkit,outbound-test,1,(C347,9198517721,9842284627,,9842284628,ECN4-EBI1,,${DOM2}))
exten => 321,1,GoSub(testkit,outbound-test,1,(C321,9198517721,9842284627,,9192088695,ECN4-EBI1,,${DOM2}))
exten => 322,1,GoSub(testkit,outbound-test,1,(C322,9198517721,6012590380,,9842284627,ECN4-EBI1,,${DOM2}))
exten => 323,1,GoSub(testkit,outbound-test,1,(C323,9198517721,6012590380,,9192088695,ECN4-EBI1,,${DOM2}))
exten => 324,1,GoSub(testkit,outbound-test,1,(C324,9198517721,6012590380,9192342100,9192088695,ECN4-EBI1,,${DOM2}))
exten => 325,1,GoSub(testkit,outbound-test,1,(C325,9198517721,9842284627,9192342100,9192088695,ECN4-EBI1,,${DOM2}))
exten => 326,1,GoSub(testkit,outbound-test,1,(C326,9198517721,6012590380,9192342100,,ECN4-EBI1,,${DOM2}))
exten => 327,1,GoSub(testkit,outbound-test,1,(C327,9198517721,9842284627,9192342100,,ECN4-EBI1,,${DOM2}))
exten => 328,1,GoSub(testkit,outbound-test,1,(C328,9725600403,9842284627,,,ECN4-EBI1,,${DOM2}))
exten => 329,1,GoSub(testkit,outbound-test,1,(C329,9725600403,6012590380,,,ECN4-EBI1,,${DOM2}))
exten => 330,1,GoSub(testkit,outbound-test,1,(C330,+4969222289610,9842284627,,,ECN4-EBI1,,${DOM2}))
exten => 331,1,GoSub(testkit,outbound-test,1,(C331,+4969222289610,6012590380,,,ECN4-EBI1,,${DOM2}))
exten => 332,1,GoSub(testkit,outbound-test,1,(C332,9725600403,6012590380,9192088695,,ECN4-EBI1,,${DOM2}))
exten => 333,1,GoSub(testkit,outbound-test,1,(C333,9725600403,6012590380,9842284627,,ECN4-EBI1,,${DOM2}))
exten => 334,1,GoSub(testkit,outbound-test,1,(C334,9725600403,6012590380,9192342100,,ECN4-EBI1,,${DOM2}))
exten => 335,1,GoSub(testkit,outbound-test,1,(C335,9725600403,6012590380,,9842284627,ECN4-EBI1,,${DOM2}))
exten => 336,1,GoSub(testkit,outbound-test,1,(C336,9725600403,9842284627,,9192088695,ECN4-EBI1,,${DOM2}))
exten => 337,1,GoSub(testkit,outbound-test,1,(C337,7038526073,6012590380,,,ECN4-EBI1,,${DOM2}))
exten => 338,1,GoSub(testkit,outbound-test,1,(C338,7038526073,6012590380,,,ECN4-EBI1,,${DOM2}))
exten => 339,1,GoSub(testkit,outbound-test,1,(C339,411,6012590380,,,ECN4-EBI1,,${DOM2}))
exten => 340,1,GoSub(testkit,outbound-test,1,(C340,411,9842284627,,,ECN4-EBI1,,${DOM2}))
exten => 341,1,GoSub(testkit,outbound-test,1,(C341,711,6012590380,,,ECN4-EBI1,,${DOM2}))
exten => 342,1,GoSub(testkit,outbound-test,1,(C342,711,9842284627,,,ECN4-EBI1,,${DOM2}))
exten => 345,1,GoSub(testkit,outbound-test,1,(C345,911,6012590380,,,ECN4-EBI1,,${DOM2}))
exten => 346,1,GoSub(testkit,outbound-test,1,(C346,911,9842284627,,,ECN4-EBI1,,${DOM2}))
exten => 348,1,GoSub(testkit,outbound-test,1,(C348,6019922341,6012590380,,,ECN4-EBI1,,${DOM2}))
exten => 350,1,GoSub(testkit,outbound-test,1,(C350,7633238611,9842284627,,9842284628,ECN4-EBI1,,${DOM2}))
exten => 351,1,GoSub(testkit,outbound-test,1,(C351,7633238611,9842284627,,9192088695,ECN4-EBI1,,${DOM2}))
exten => 352,1,GoSub(testkit,outbound-test,1,(C352,6019922341,6012590380,,9842284627,ECN4-EBI1,,${DOM2}))
exten => 353,1,GoSub(testkit,outbound-test,1,(C353,6019922341,6012590380,,6012590381,ECN4-EBI1,,${DOM2}))
exten => 354,1,GoSub(testkit,outbound-test,1,(C354,7038526073,9842284627,,9842284628,ECN4-EBI1,,${DOM2}))
exten => 355,1,GoSub(testkit,outbound-test,1,(C355,7038526073,9842284627,,9192088695,ECN4-EBI1,,${DOM2}))
exten => 356,1,GoSub(testkit,outbound-test,1,(C356,7038526073,6012590380,,9842284627,ECN4-EBI1,,${DOM2}))
exten => 357,1,GoSub(testkit,outbound-test,1,(C357,7038526073,6012590380,,7038526074,ECN4-EBI1,,${DOM2}))

exten => 400,1,GoSub(testkit,outbound-test,1,(C400,8062665505,7634220032,,,ECN4-EBI2,,${DOM2}))
exten => 401,1,GoSub(testkit,outbound-test,1,(C401,9198517721,9842284627,,,ECN4-EBI2,,${DOM2}))
exten => 402,1,GoSub(testkit,outbound-test,1,(C402,7038526073,6012590380,,,ECN4-EBI2,,${DOM2}))
exten => 403,1,GoSub(testkit,outbound-test,1,(C403,7038526073,9842284627,,,ECN4-EBI2,,${DOM2}))
exten => 404,1,GoSub(testkit,outbound-test,1,(C404,+33160306053,6012590380,,,ECN4-EBI2,,${DOM2}))
exten => 405,1,GoSub(testkit,outbound-test,1,(C405,+33160306053,9842284627,,,ECN4-EBI2,,${DOM2}))
exten => 406,1,GoSub(testkit,outbound-test,1,(C406,8777777176,6012590380,,,ECN4-EBI2,,${DOM2}))
exten => 407,1,GoSub(testkit,outbound-test,1,(C407,8777777176,9842284627,,,ECN4-EBI2,,${DOM2}))
exten => 408,1,GoSub(testkit,outbound-test,1,(C408,8777777176,8003435740,,,ECN4-EBI2,,${DOM2}))
exten => 439,1,GoSub(testkit,outbound-test,1,(C439,8062665505,8003435740,,,ECN4-EBI2,,${DOM2}))
exten => 410,1,GoSub(testkit,outbound-test,1,(C410,9198517721,6012590380,9192088695,,ECN4-EBI2,,${DOM2}))
exten => 411,1,GoSub(testkit,outbound-test,1,(C411,9198517721,6012590380,9842284627,,ECN4-EBI2,,${DOM2}))
exten => 412,1,GoSub(testkit,outbound-test,1,(C412,9198517721,9842284627,9192088695,,ECN4-EBI2,,${DOM2}))
exten => 413,1,GoSub(testkit,outbound-test,1,(C413,9198517721,9842284627,,6012590380,ECN4-EBI2,,${DOM2}))
exten => 414,1,GoSub(testkit,outbound-test,1,(C414,9198517721,6012590380,,9842284627,ECN4-EBI2,,${DOM2}))
exten => 415,1,GoSub(testkit,outbound-test,1,(C415,9198517721,6012590380,,9192088695,ECN4-EBI2,,${DOM2}))
exten => 416,1,GoSub(testkit,outbound-test,1,(C416,9198517721,6012590380,9192342100,9192088695,ECN4-EBI2,,${DOM2}))
exten => 417,1,GoSub(testkit,outbound-test,1,(C417,9198517721,9842284627,9192342100,6012590380,ECN4-EBI2,,${DOM2}))
exten => 418,1,GoSub(testkit,outbound-test,1,(C418,9198517721,6012590380,9192342100,,ECN4-EBI2,,${DOM2}))
exten => 419,1,GoSub(testkit,outbound-test,1,(C419,9198517721,9842284627,9192342100,,ECN4-EBI2,,${DOM2}))
exten => 420,1,GoSub(testkit,outbound-test,1,(C420,9725600403,9842284627,,,ECN4-EBI2,,${DOM2}))
exten => 421,1,GoSub(testkit,outbound-test,1,(C421,9725600403,6012590380,,,ECN4-EBI2,,${DOM2}))
exten => 422,1,GoSub(testkit,outbound-test,1,(C422,+4969222289610,9842284627,,,ECN4-EBI2,,${DOM2}))
exten => 423,1,GoSub(testkit,outbound-test,1,(C423,+4969222289610,6012590380,,,ECN4-EBI2,,${DOM2}))
exten => 424,1,GoSub(testkit,outbound-test,1,(C424,9725600403,6012590380,9192088695,,ECN4-EBI2,,${DOM2}))
exten => 425,1,GoSub(testkit,outbound-test,1,(C425,9725600403,6012590380,9842284627,,ECN4-EBI2,,${DOM2}))
exten => 426,1,GoSub(testkit,outbound-test,1,(C426,9725600403,6012590380,9192342100,,ECN4-EBI2,,${DOM2}))
exten => 427,1,GoSub(testkit,outbound-test,1,(C427,9725600403,6012590380,,9842284627,ECN4-EBI2,,${DOM2}))
exten => 428,1,GoSub(testkit,outbound-test,1,(C428,9725600403,9842284627,,9192088695,ECN4-EBI2,,${DOM2}))
exten => 429,1,GoSub(testkit,outbound-test,1,(C429,7038526073,6012590380,,,ECN4-EBI2,,${DOM2}))
exten => 430,1,GoSub(testkit,outbound-test,1,(C430,7038526073,6012590380,,,ECN4-EBI2,,${DOM2}))
exten => 431,1,GoSub(testkit,outbound-test,1,(C431,411,6012590380,,,ECN4-EBI2,,${DOM2}))
exten => 432,1,GoSub(testkit,outbound-test,1,(C432,411,9842284627,,,ECN4-EBI2,,${DOM2}))
exten => 433,1,GoSub(testkit,outbound-test,1,(C433,711,6012590380,,,ECN4-EBI2,,${DOM2}))
exten => 434,1,GoSub(testkit,outbound-test,1,(C434,711,9842284627,,,ECN4-EBI2,,${DOM2}))
exten => 437,1,GoSub(testkit,outbound-test,1,(C437,911,6012590380,,,ECN4-EBI2,,${DOM2}))
exten => 438,1,GoSub(testkit,outbound-test,1,(C438,911,9842284627,,,ECN4-EBI2,,${DOM2}))

;Comment out the other SBC in pjsip.conf, or you will get 50% failures. 
exten => 900,1,NoOp("ECN Refer Test")
 same => n,Ringing()
 same => n,Wait(1)
 same => n,Answer()
 same => n,Playback("hello-world")
 same => n,Set(CALLERID(num)=+17632301000)
 ;same => n,Dial(PJSIP/+16123066440@ECN4-EBI1,,F)
 same => n,Dial(PJSIP/$+16123066440@ECN4-EBI1,,b(Handlers^addHeaders^1(+19192342100,,172.31.106.107)))
 same => n,Playback("hello-world")
 same => n,Set(CALLERID(num)=+17632302000)
 same => n,Transfer(PJSIP/<sip:+17635917714@172.31.106.107>)
 same => n,Playback("hello-world")
 same => n,Hangup()

exten => 901,1,GoSub(testkit,outbound-test,1,(C901,+16123066440,6013392097,,,ECN4-EBI2,,${DOM2}))
exten => 902,1,GoSub(testkit,outbound-test,1,(C902,+16123066440,6013392097,6013392097,,ECN4-EBI2,,${DOM2}))
